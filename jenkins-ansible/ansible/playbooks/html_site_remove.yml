---
- name: Deleting HTML Site
  hosts: "{{ web_environment }}"
  become: true
  vars_files:
    - var_files/web_vars.yml

  tasks:
    - name: Checking if config file exist in sites-available
      ansible.builtin.stat:
        path: "{{ APACHE2_AVAILABLE }}/{{ site_url }}.conf"
      register: sites_available
      when:
        - site_url != ""

    - name: Progress
      ansible.builtin.debug:
        msg:
          - "{{ site_url }} does not exist"
          - "Other tasks will be skipped"
      when: sites_available.stat.exists == False

    - name: Disable site
      ansible.builtin.shell: a2dissite {{ site_url }}
      when: sites_available.stat.exists == True

    - name: Deleting site VHOST config
      ansible.builtin.file:
        path: "{{ APACHE2_AVAILABLE }}/{{ site_url }}.conf"
        state: absent
      when: sites_available.stat.exists == True

    - name: Set site auth user
      delegate_to: localhost
      delegate_facts: true
      run_once: true
      ansible.builtin.shell: |
        user=$(awk -F'\t' -v s={{ site_url }} '{if ($1==s) print $2}' ${{ SITE_LIST_PATH }}/site_index.txt)
        echo $user
      register: username
      when: sites_available.stat.exists == True

    - name: Deleting Document root directory
      vars:
        site_user: "{{ username.stdout }}"
      ansible.builtin.file:
        path: "{{ DOC_ROOT }}/{{ site_user }}"
        state: absent
      when:
        - sites_available.stat.exists == True
        - username.stdout != ""

    - name: Deleting site user
      vars:
        site_user: "{{ username.stdout }}"
      ansible.builtin.user:
        name: "{{ site_user }}"
        state: absent
      when:
        - sites_available.stat.exists == True
        - username.stdout != ""

    - name: Restart apache2
      ansible.builtin.systemd:
        name: apache2
        state: restarted
      when:
        - sites_available.stat.exists == True
        - username.stdout != ""

    - name: Output
      ansible.builtin.debug:
        msg:
          - "HTML site {{ site_url }} has been deleted successfully"
      when:
        - sites_available.stat.exists == True
        - username.stdout != ""

    - name: Local Output
      delegate_to: localhost
      delegate_facts: true
      run_once: true
      ansible.builtin.lineinfile:
        path: ${{ SITE_LIST_PATH }}/site_index.txt
        regex: "^{{ site_url }}"
        state: absent
      when:
        - sites_available.stat.exists == True
        - username.stdout != ""
